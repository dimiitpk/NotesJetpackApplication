<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->

    <style name="AppTheme.DayNight.Final" parent="AppTheme" />

    <style name="AppTheme" parent="AppTheme.NoActionBar">

        <!--Material color attributes (light theme) -->
        <!--colorPrimary colors map to components and elements, such as app bars and buttons. -->
        <!--colorSecondary colors are most often used as accents on components, such as FABs and -->
        <!--selection controls.-->
        <item name="colorPrimary">@color/purple_500</item>
        <item name="colorPrimaryVariant">@color/purple_700</item>
        <item name="colorSecondary">@color/green_200</item>
        <item name="colorSecondaryVariant">@color/green_500</item>
        <!--colorBackground appears behind scrollable content and is used for the default window-->
        <!--background. colorSurface is mapped to the surface of components such as cards, sheets-->
        <!--and menus. colorError is used to indicate an error state for components such as-->
        <!--text fields.-->
        <item name="android:colorBackground">@color/white_50</item>
        <item name="colorSurface">@color/white_50</item>
        <item name="colorError">@color/red_600</item>
        <!--"On" colors define how text, icons and strokes are colored in relation to the surface-->
        <!--on which they appear.-->
        <item name="colorOnPrimary">@color/white_50</item>
        <item name="colorOnSecondary">@color/black_900</item>
        <item name="colorOnBackground">@color/black_800</item> <!--        900-->
        <item name="colorOnSurface">@color/black_800</item> <!--        900-->
        <item name="colorOnError">@color/white_50</item>
        <!--  Divider color -->
        <item name="dividerVertical">@color/reply_black_900_alpha_020</item>
        <!--Material type attributes-->
        <item name="textAppearanceHeadline1">@style/TextAppearance.MyTheme.Headline1</item>
        <item name="textAppearanceHeadline2">@style/TextAppearance.MyTheme.Headline2</item>
        <item name="textAppearanceHeadline3">@style/TextAppearance.MyTheme.Headline3</item>
        <item name="textAppearanceHeadline4">@style/TextAppearance.MyTheme.Headline4</item>
        <item name="textAppearanceHeadline5">@style/TextAppearance.MyTheme.Headline5</item>
        <item name="textAppearanceHeadline6">@style/TextAppearance.MyTheme.Headline6</item>
        <item name="textAppearanceSubtitle1">@style/TextAppearance.MyTheme.Subtitle1</item>
        <item name="textAppearanceSubtitle2">@style/TextAppearance.MyTheme.Subtitle2</item>
        <item name="textAppearanceBody1">@style/TextAppearance.MyTheme.Body1</item>
        <item name="textAppearanceBody2">@style/TextAppearance.MyTheme.Body2</item>
        <item name="textAppearanceButton">@style/TextAppearance.MyTheme.Button</item>
        <item name="textAppearanceCaption">@style/TextAppearance.MyTheme.Caption</item>
        <item name="textAppearanceOverline">@style/TextAppearance.MyTheme.Overline</item>
        <!--Material shape attributes-->
        <item name="shapeAppearanceSmallComponent">@style/ShapeAppearance.MyTheme.SmallComponent
        </item>
        <item name="shapeAppearanceMediumComponent">@style/ShapeAppearance.MyTheme.MediumComponent
        </item>
        <item name="shapeAppearanceLargeComponent">@style/ShapeAppearance.MyTheme.LargeComponent
        </item>
        <item name="android:windowMinWidthMajor">97%</item>
        <item name="android:windowMinWidthMinor">97%</item>
        <!--Component styles-->
        <item name="materialAlertDialogTheme">@style/AppTheme.Dialog.Alert</item>
        <item name="navigationViewStyle">@style/AppTheme.Widget.NavigationView</item>
        <!-- App Bar -->
        <item name="windowActionModeOverlay">true</item>
        <item name="actionModeBackground">?android:colorBackground</item>
        <item name="actionBarSize">@dimen/app_bar_height</item>
        <item name="actionBarTheme">@style/AppTheme.Widget.ActionBar.InActionMode</item>
        <!--    Preselio u style    <item name="actionModeCloseDrawable">@drawable/ic_close_24dp</item>-->
        <!-- Material Dialogs. -->
        <item name="md_background_color">?attr/colorSurface</item>
        <item name="md_color_content">?attr/colorOnSurface</item>
        <item name="md_color_title">?attr/colorOnSurface</item>
        <item name="md_color_button_text">?attr/colorOnSurface</item>
        <!-- SnackBar -->
        <item name="snackbarStyle">@style/AppTheme.Widget.Snackbar</item>
        <item name="snackbarTextViewStyle">@style/AppTheme.TextView.Snackbar</item>
        <item name="snackbarButtonStyle">@style/AppTheme.Button.Snackbar</item>
        <!--        -->
    </style>

    <style name="AppTheme.NoActionBar" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
        <item name="android:statusBarColor">@android:color/transparent</item>
        <item name="android:windowLightStatusBar" tools:targetApi="23">
            @bool/use_light_system_bars
        </item>
        <item name="android:navigationBarColor">@color/nav_bar_scrim</item>
        <item name="android:windowLightNavigationBar" tools:targetApi="27">
            @bool/use_light_nav_bars
        </item>
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <item name="android:windowBackground">?android:colorBackground</item>
    </style>
</resources>